{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_workspace\\\\React_workspace\\\\src\\\\components\\\\ChildComponent.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"; //프로퍼티 타입을 지정해주기 위해서\n// ===============================================================\n// class ChildComponent extends Component {\n//     render(){\n//         //text 프로퍼티 화면에 출력\n//         return <div><h2>{this.props.text}</h2></div>\n//     }\n// }\n// //프로퍼티 타입 지정\n// ChildComponent.propTypes = {\n//     text: PropTypes.string, // text 프로퍼티는 문자열 타입\n// };\n// ===============================================================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChildComponent extends Component {\n  render() {\n    // 7가지 데이터 타입 (이게 없으면 this.props를 매번 붙여서 사용해야 한다.)\n    const {\n      strVal,\n      numVal,\n      nodeVal,\n      arrVal,\n      objVal,\n      funcVal,\n      boolVal\n    } = this.props;\n    const boolText = boolVal ? \"트루\" : \"펄스\"; // 다양한 프로퍼티 데이터 타입을 화면에 출력\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBB38\\uC790 : \", strVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC22B\\uC790 : \", numVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB178\\uB4DC : \", nodeVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBC30\\uC5F4 : \", arrVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC1D\\uCCB4 : \", objVal.name + objVal.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD568\\uC218 : \", funcVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBD88\\uB9AC\\uC5B8 : \", boolText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n} // 프로퍼티 타입 지정\n\n\nChildComponent.propTypes = {\n  strVal: PropTypes.string,\n  numVal: PropTypes.number,\n  nodeVal: PropTypes.node,\n  arrVal: PropTypes.arrayOf(PropTypes.string),\n  // 문자열을 넣는 배열 타입 \n  objVal: PropTypes.shape({\n    //객체 프로퍼티는 shape 사용\n    name: PropTypes.string,\n    age: PropTypes.number\n  }),\n  funcVal: PropTypes.func,\n  boolVal: PropTypes.bool\n};\nexport default ChildComponent;","map":{"version":3,"sources":["D:/react_workspace/React_workspace/src/components/ChildComponent.jsx"],"names":["React","Component","PropTypes","ChildComponent","render","strVal","numVal","nodeVal","arrVal","objVal","funcVal","boolVal","props","boolText","name","age","propTypes","string","number","node","arrayOf","shape","func","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,cAAN,SAA6BF,SAA7B,CAAsC;AAClCG,EAAAA,MAAM,GAAE;AACJ;AACA,UAAM;AACFC,MAAAA,MADE;AAEFC,MAAAA,MAFE;AAGFC,MAAAA,OAHE;AAIFC,MAAAA,MAJE;AAKFC,MAAAA,MALE;AAMFC,MAAAA,OANE;AAOFC,MAAAA;AAPE,QAQF,KAAKC,KART;AASA,UAAMC,QAAQ,GAAGF,OAAO,GAAG,IAAH,GAAU,IAAlC,CAXI,CAaJ;;AACA,wBACI;AAAA,8BACI;AAAA,sCAASN,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,sCAASC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,sCAASC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,sCAASC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,sCAASC,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACM,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,sCAASL,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,4CAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA1BiC,C,CA6BtC;;;AACAV,cAAc,CAACa,SAAf,GAA2B;AACvBX,EAAAA,MAAM,EAAGH,SAAS,CAACe,MADI;AAEvBX,EAAAA,MAAM,EAAGJ,SAAS,CAACgB,MAFI;AAGvBX,EAAAA,OAAO,EAAGL,SAAS,CAACiB,IAHG;AAIvBX,EAAAA,MAAM,EAAGN,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACe,MAA5B,CAJc;AAIuB;AAC9CR,EAAAA,MAAM,EAAGP,SAAS,CAACmB,KAAV,CAAgB;AACrB;AACAP,IAAAA,IAAI,EAAGZ,SAAS,CAACe,MAFI;AAGrBF,IAAAA,GAAG,EAAEb,SAAS,CAACgB;AAHM,GAAhB,CALc;AAUvBR,EAAAA,OAAO,EAAGR,SAAS,CAACoB,IAVG;AAWvBX,EAAAA,OAAO,EAAGT,SAAS,CAACqB;AAXG,CAA3B;AAeA,eAAepB,cAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\"; //프로퍼티 타입을 지정해주기 위해서\r\n\r\n// ===============================================================\r\n// class ChildComponent extends Component {\r\n//     render(){\r\n//         //text 프로퍼티 화면에 출력\r\n//         return <div><h2>{this.props.text}</h2></div>\r\n//     }\r\n// }\r\n\r\n// //프로퍼티 타입 지정\r\n// ChildComponent.propTypes = {\r\n//     text: PropTypes.string, // text 프로퍼티는 문자열 타입\r\n// };\r\n// ===============================================================\r\nclass ChildComponent extends Component{\r\n    render(){\r\n        // 7가지 데이터 타입 (이게 없으면 this.props를 매번 붙여서 사용해야 한다.)\r\n        const {\r\n            strVal,\r\n            numVal,\r\n            nodeVal,\r\n            arrVal,\r\n            objVal,\r\n            funcVal,\r\n            boolVal,\r\n        } = this.props;\r\n        const boolText = boolVal ? \"트루\" : \"펄스\";\r\n\r\n        // 다양한 프로퍼티 데이터 타입을 화면에 출력\r\n        return (\r\n            <div>\r\n                <p>문자 : {strVal}</p>\r\n                <p>숫자 : {numVal}</p> \r\n                <p>노드 : {nodeVal}</p>\r\n                <p>배열 : {arrVal}</p>\r\n                <p>객체 : {objVal.name + objVal.age}</p>\r\n                <p>함수 : {funcVal}</p>\r\n                <p>불리언 : {boolText}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// 프로퍼티 타입 지정\r\nChildComponent.propTypes = {\r\n    strVal : PropTypes.string,\r\n    numVal : PropTypes.number,\r\n    nodeVal : PropTypes.node,\r\n    arrVal : PropTypes.arrayOf(PropTypes.string), // 문자열을 넣는 배열 타입 \r\n    objVal : PropTypes.shape({\r\n        //객체 프로퍼티는 shape 사용\r\n        name : PropTypes.string,\r\n        age: PropTypes.number,\r\n    }),\r\n    funcVal : PropTypes.func,\r\n    boolVal : PropTypes.bool,\r\n};\r\n\r\n\r\nexport default ChildComponent;"]},"metadata":{},"sourceType":"module"}