{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_workspace\\\\React_workspace\\\\src\\\\components\\\\InputComponent.jsx\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      // 상위 프로퍼티로 초기화\n      isError: false,\n      //입력 오류가 있는지\n      isFirst: true // 처음 입력창 포커스\n\n    }; //콜백 함수 바인딩\n\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this); // this.handleFocus = this.handleFocus.bind(this);\n  } //ref 프로퍼티 연결\n\n\n  setRef(ref) {\n    this.ref = ref;\n  } //입력창 변경 이벤트 \n\n\n  handleChange(e) {\n    const {\n      name,\n      onChange\n    } = this.props;\n    console.log(this.props);\n    console.log(e);\n    console.log(`handleChange() name : ${name} , e.target.value : ${e.target.value}`); //콜백 함수가 있을 경우\n\n    if (onChange) {\n      //한글 입력 체크\n      const pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n      let checkError = false;\n      if (pattern_kor.test(e.target.value)) checkError = true; // 비밀번호 입력창은 문자 치환\n\n      let strValue = String(e.target.value);\n\n      if (name === \"pass\") {\n        for (var i = 0; i < strValue.length - 1; i++) {\n          strValue = strValue.replace(strValue[i], \"*\");\n        }\n      } // 변경된 스테이트 값\n\n\n      this.setState({\n        isError: checkError,\n        value: strValue\n      }); // 상위 컴포넌트 콜백 함수 실행\n\n      onChange(name, e.target.value);\n    }\n  }\n\n  render() {\n    const {\n      label,\n      name,\n      type,\n      errorMessage\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `input_${name}`,\n        value: this.state.value,\n        type: type,\n        ref: this.setRef,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.isError && errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InputComponent;","map":{"version":3,"sources":["D:/react_workspace/React_workspace/src/components/InputComponent.jsx"],"names":["React","PureComponent","PropTypes","InputComponent","constructor","props","state","value","isError","isFirst","setRef","bind","handleChange","ref","e","name","onChange","console","log","target","pattern_kor","checkError","test","strValue","String","i","length","replace","setState","render","label","type","errorMessage","handleFocus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAN,SAA6BF,aAA7B,CAA0C;AAEtCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAGF,KAAK,CAACE,KADL;AACY;AACrBC,MAAAA,OAAO,EAAG,KAFD;AAEQ;AACjBC,MAAAA,OAAO,EAAE,IAHA,CAGM;;AAHN,KAAb,CAFc,CAQd;;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB,CAVc,CAWf;AAEF,GAfqC,CAgBtC;;;AACAD,EAAAA,MAAM,CAACG,GAAD,EAAK;AACP,SAAKA,GAAL,GAAWA,GAAX;AACH,GAnBqC,CAqBtC;;;AACAD,EAAAA,YAAY,CAACE,CAAD,EAAG;AACX,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAmB,KAAKX,KAA9B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CACK,yBAAwBH,IAAK,uBAAsBD,CAAC,CAACK,MAAF,CAASZ,KAAM,EADvE,EAJW,CAQX;;AACA,QAAGS,QAAH,EAAY;AACR;AACA,YAAMI,WAAW,GAAG,eAApB;AACA,UAAIC,UAAU,GAAG,KAAjB;AACA,UAAGD,WAAW,CAACE,IAAZ,CAAiBR,CAAC,CAACK,MAAF,CAASZ,KAA1B,CAAH,EAAqCc,UAAU,GAAG,IAAb,CAJ7B,CAMR;;AACA,UAAIE,QAAQ,GAAGC,MAAM,CAACV,CAAC,CAACK,MAAF,CAASZ,KAAV,CAArB;;AACA,UAAIQ,IAAI,KAAK,MAAb,EAAqB;AACjB,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAAT,GAAkB,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1CF,UAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiBJ,QAAQ,CAACE,CAAD,CAAzB,EAA8B,GAA9B,CAAX;AACH;AACJ,OAZO,CAaR;;;AACA,WAAKG,QAAL,CAAc;AAAEpB,QAAAA,OAAO,EAAEa,UAAX;AAAuBd,QAAAA,KAAK,EAAEgB;AAA9B,OAAd,EAdQ,CAeR;;AACAP,MAAAA,QAAQ,CAACD,IAAD,EAAOD,CAAC,CAACK,MAAF,CAASZ,KAAhB,CAAR;AAGH;AAEJ;;AACDsB,EAAAA,MAAM,GAAE;AACJ,UAAK;AAACC,MAAAA,KAAD;AAAOf,MAAAA,IAAP;AAAYgB,MAAAA,IAAZ;AAAiBC,MAAAA;AAAjB,QAAiC,KAAK3B,KAA3C;AACA,wBACI;AAAA,iBACKyB,KADL,eAEI;AACI,QAAA,EAAE,EAAG,SAAQf,IAAK,EADtB;AAEI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAFtB;AAGI,QAAA,IAAI,EAAEwB,IAHV;AAII,QAAA,GAAG,EAAE,KAAKrB,MAJd;AAKI,QAAA,QAAQ,EAAE,KAAKE,YALnB;AAMI,QAAA,OAAO,EAAE,KAAKqB;AANlB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAUS,KAAK3B,KAAL,CAAWE,OAAX,IAAsBwB,YAV/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AArEqC;;AA0E1C,eAAe7B,cAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass InputComponent extends PureComponent{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value : props.value, // 상위 프로퍼티로 초기화\r\n            isError : false, //입력 오류가 있는지\r\n            isFirst :true, // 처음 입력창 포커스\r\n        };\r\n        \r\n        //콜백 함수 바인딩\r\n        this.setRef = this.setRef.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n       // this.handleFocus = this.handleFocus.bind(this);\r\n\r\n    }\r\n    //ref 프로퍼티 연결\r\n    setRef(ref){\r\n        this.ref = ref;    \r\n    }\r\n\r\n    //입력창 변경 이벤트 \r\n    handleChange(e){\r\n        const {name, onChange} = this.props;\r\n        console.log(this.props);\r\n        console.log(e);\r\n        console.log(\r\n            `handleChange() name : ${name} , e.target.value : ${e.target.value}`\r\n        );\r\n\r\n        //콜백 함수가 있을 경우\r\n        if(onChange){\r\n            //한글 입력 체크\r\n            const pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n            let checkError = false; \r\n            if(pattern_kor.test(e.target.value)) checkError = true;\r\n\r\n            // 비밀번호 입력창은 문자 치환\r\n            let strValue = String(e.target.value);\r\n            if (name === \"pass\") {\r\n                for (var i = 0; i < strValue.length - 1; i++) {\r\n                    strValue = strValue.replace(strValue[i], \"*\");\r\n                }\r\n            }\r\n            // 변경된 스테이트 값\r\n            this.setState({ isError: checkError, value: strValue });\r\n            // 상위 컴포넌트 콜백 함수 실행\r\n            onChange(name, e.target.value);\r\n\r\n\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        const{label,name,type,errorMessage} = this.props;\r\n        return (\r\n            <label>\r\n                {label}\r\n                <input \r\n                    id={`input_${name}`}\r\n                    value={this.state.value}\r\n                    type={type}\r\n                    ref={this.setRef}\r\n                    onChange={this.handleChange}\r\n                    onFocus={this.handleFocus}\r\n                    />\r\n                    {this.state.isError && errorMessage}\r\n            </label>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default InputComponent;"]},"metadata":{},"sourceType":"module"}