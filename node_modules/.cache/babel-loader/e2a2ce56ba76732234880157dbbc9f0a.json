{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_workspace\\\\React_workspace\\\\src\\\\components\\\\InputComponent.jsx\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      // 상위 프로퍼티로 초기화\n      isError: false,\n      // 입력 오류가 있는지\n      isFirst: true // 처음 입력창 포커스\n\n    }; // 콜백 함수 바인딩\n\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  } // ref 프로퍼티 연결\n\n\n  setRef(ref) {\n    this.ref = ref;\n  } // 입력창 변경 이벤트\n\n\n  handleChange(e) {\n    const {\n      name,\n      onChange\n    } = this.props;\n    console.log(`handleChange() name : ${name} , e.target.value : ${e.target.value}`); // 콜백 함수가 있을 경우\n\n    if (onChange) {\n      // 한글 입력 체크\n      const pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n      let checkError = false;\n      if (pattern_kor.test(e.target.value)) checkError = true; // 비밀번호 입력창은 문자 치환\n\n      let strValue = String(e.target.value);\n\n      if (name === \"pass\") {\n        for (var i = 0; i < strValue.length - 1; i++) {\n          strValue = strValue.replace(strValue[i], \"*\");\n        }\n      } // 변경된 스테이트 값\n\n\n      this.setState({\n        isError: checkError,\n        value: strValue\n      }); // 상위 컴포넌트 콜백 함수 실행\n\n      onChange(name, e.target.value);\n    }\n  } // 입력창에 포커스\n\n\n  handleFocus(e) {\n    // 처음 포커스시에는 입력창 초기화\n    if (this.state.isFirst) {\n      this.setState({\n        value: \"\",\n        isFirst: false\n      });\n    }\n  } // 컴포넌트 마운트\n\n\n  componentDidMount() {\n    // 포커스 맞추기\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    // 프로퍼티 받아서 화면 출력\n    const {\n      label,\n      name,\n      type,\n      errorMessage\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `input_${name}`,\n        value: this.state.value,\n        type: type,\n        ref: this.setRef,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), this.state.isError && errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nInputComponent.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  type: PropTypes.oneOf([\"text\", \"password\", \"number\", \"price\"]),\n  autoFocus: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nInputComponent.defaultProps = {\n  value: \"\",\n  type: \"text\",\n  autoFocus: false,\n  onChange: () => {},\n  onFocus: () => {}\n};\nexport default InputComponent;","map":{"version":3,"sources":["D:/react_workspace/React_workspace/src/components/InputComponent.jsx"],"names":["React","PureComponent","PropTypes","InputComponent","constructor","props","state","value","isError","isFirst","setRef","bind","handleChange","handleFocus","ref","e","name","onChange","console","log","target","pattern_kor","checkError","test","strValue","String","i","length","replace","setState","componentDidMount","autoFocus","focus","render","label","type","errorMessage","propTypes","string","isRequired","oneOfType","number","oneOf","bool","func","onFocus","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass InputComponent extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.value, // 상위 프로퍼티로 초기화\r\n            isError: false, // 입력 오류가 있는지\r\n            isFirst: true, // 처음 입력창 포커스\r\n        };\r\n\r\n        // 콜백 함수 바인딩\r\n        this.setRef = this.setRef.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFocus = this.handleFocus.bind(this);\r\n    }\r\n    // ref 프로퍼티 연결\r\n    setRef(ref) {\r\n        this.ref = ref;\r\n    }\r\n    // 입력창 변경 이벤트\r\n    handleChange(e) {\r\n        const { name, onChange } = this.props;\r\n        console.log(\r\n            `handleChange() name : ${name} , e.target.value : ${e.target.value}`\r\n        );\r\n\r\n    // 콜백 함수가 있을 경우\r\n        if (onChange) {\r\n            // 한글 입력 체크\r\n            const pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n            let checkError = false;\r\n            if (pattern_kor.test(e.target.value)) checkError = true;\r\n            // 비밀번호 입력창은 문자 치환\r\n            let strValue = String(e.target.value);\r\n            if (name === \"pass\") {\r\n                for (var i = 0; i < strValue.length - 1; i++) {\r\n                    strValue = strValue.replace(strValue[i], \"*\");\r\n                }\r\n            }\r\n            // 변경된 스테이트 값\r\n            this.setState({ isError: checkError, value: strValue });\r\n            // 상위 컴포넌트 콜백 함수 실행\r\n            onChange(name, e.target.value);\r\n        }\r\n    }\r\n\r\n    // 입력창에 포커스\r\n    handleFocus(e) {\r\n        // 처음 포커스시에는 입력창 초기화\r\n        if (this.state.isFirst) {\r\n            this.setState({ value: \"\", isFirst: false });\r\n        }\r\n    }\r\n    \r\n    // 컴포넌트 마운트\r\n    componentDidMount() {\r\n    // 포커스 맞추기\r\n        if (this.props.autoFocus) {\r\n            this.ref.focus();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n    // 프로퍼티 받아서 화면 출력\r\n        const { label, name, type, errorMessage } = this.props;\r\n        return (\r\n            <label>\r\n                {label}\r\n            <input\r\n                id={`input_${name}`}\r\n                value={this.state.value}\r\n                type={type}\r\n                ref={this.setRef}\r\n                onChange={this.handleChange}\r\n                onFocus={this.handleFocus}\r\n            />\r\n            {this.state.isError && errorMessage}\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\n    InputComponent.propTypes = {\r\n        label: PropTypes.string,\r\n        name: PropTypes.string.isRequired,\r\n        value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n        type: PropTypes.oneOf([\"text\", \"password\", \"number\", \"price\"]),\r\n        autoFocus: PropTypes.bool,\r\n        errorMessage: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n    };\r\n    InputComponent.defaultProps = {\r\n        value: \"\",\r\n        type: \"text\",\r\n        autoFocus: false,\r\n        onChange: () => {},\r\n        onFocus: () => {},\r\n    };\r\nexport default InputComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}