{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_workspace\\\\React_workspace\\\\begin-react\\\\src\\\\components\\\\ScrollComponent.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScrollComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listEnd: 20,\n      //초기에 리스트 20개 시작\n      listPlus: 10 //스크롤을 내리면 10개씩 추가\n\n    }; //콜백함수 바인딩\n\n    this.setRef = this.setRef.bind(this);\n    this.checkScroll = this.checkScroll.bind(this);\n  } //ref 프로퍼티 연결\n\n\n  setRef(ref) {\n    this.ref = ref;\n  } //스크롤 위치 체크\n\n\n  checkScroll() {\n    const posBottom = this.ref.getBoundingClientRect().bottom;\n    const winHeight = window.innerHeight;\n    console.log(`posBottom : ${posBottom}, winHeight:${winHeight}`); //스크롤이 내려오면 리스트 추가\n\n    if (posBottom < winHeight) {\n      this.setState({\n        listEnd: this.state.listEnd + this.state.listPlus\n      });\n    }\n  } //컴포넌트가 마운트 됬을때\n\n\n  componentDidMount() {\n    //이벤트 리스너에 체크함수 연결\n    window.addEventListener(\"scroll\", this.checkScroll);\n    this.checkScroll();\n  } //컴포넌트가 해체됬을때\n\n\n  componentWillUnmount() {\n    //이벤트 리스너에서 삭제\n    window.removeEventListener(\"scroll\", this.checkScroll);\n  }\n\n  render() {\n    const listComponent = [];\n\n    for (var i = 1; i <= this.state.listEnd; i++) {\n      listComponent.push( /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\uB9AC\\uC2A4\\uD2B8 \\uCEF4\\uD3EC\\uB10C\\uD2B8\", i]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.setRef,\n      children: listComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default ScrollComponent;","map":{"version":3,"sources":["D:/react_workspace/React_workspace/begin-react/src/components/ScrollComponent.jsx"],"names":["React","ScrollComponent","PureComponent","constructor","props","state","listEnd","listPlus","setRef","bind","checkScroll","ref","posBottom","getBoundingClientRect","bottom","winHeight","window","innerHeight","console","log","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","listComponent","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,aAApC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AACI;AACXC,MAAAA,QAAQ,EAAC,EAFF,CAEM;;AAFN,KAAX,CAFc,CAOd;;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAX4C,CAa7C;;;AACAD,EAAAA,MAAM,CAACG,GAAD,EAAK;AACP,SAAKA,GAAL,GAAWA,GAAX;AACH,GAhB4C,CAkB7C;;;AACAD,EAAAA,WAAW,GAAE;AACT,UAAME,SAAS,GAAG,KAAKD,GAAL,CAASE,qBAAT,GAAiCC,MAAnD;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,WAAzB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcP,SAAU,eAAcG,SAAU,EAA7D,EAJS,CAMT;;AACA,QAAGH,SAAS,GAAGG,SAAf,EAAyB;AACrB,WAAKK,QAAL,CAAc;AAACd,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKD,KAAL,CAAWE;AAA1C,OAAd;AACH;AAEJ,GA9B4C,CAiC7C;;;AACAc,EAAAA,iBAAiB,GAAE;AACf;AACAL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKZ,WAAvC;AACA,SAAKA,WAAL;AACH,GAtC4C,CAwC7C;;;AACAa,EAAAA,oBAAoB,GAAE;AAClB;AACAP,IAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKd,WAA1C;AACH;;AAEDe,EAAAA,MAAM,GAAE;AACJ,UAAMC,aAAa,GAAG,EAAtB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,KAAKtB,KAAL,CAAWC,OAA1B,EAAkCqB,CAAC,EAAnC,EAAsC;AAClCD,MAAAA,aAAa,CAACE,IAAd,eAAmB;AAAA,kEAAqBD,CAArB;AAAA,SAASA,CAAT;AAAA;AAAA;AAAA;AAAA,cAAnB;AACH;;AACD,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAKnB,MAAf;AAAA,gBAAwBkB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AApD4C;;AAuDjD,eAAezB,eAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass ScrollComponent extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            listEnd:20,//초기에 리스트 20개 시작\r\n            listPlus:10, //스크롤을 내리면 10개씩 추가\r\n        };\r\n\r\n        //콜백함수 바인딩\r\n        this.setRef = this.setRef.bind(this);\r\n        this.checkScroll = this.checkScroll.bind(this);\r\n    }\r\n\r\n    //ref 프로퍼티 연결\r\n    setRef(ref){\r\n        this.ref = ref;\r\n    }\r\n\r\n    //스크롤 위치 체크\r\n    checkScroll(){\r\n        const posBottom = this.ref.getBoundingClientRect().bottom;\r\n        const winHeight = window.innerHeight;\r\n\r\n        console.log(`posBottom : ${posBottom}, winHeight:${winHeight}`);\r\n\r\n        //스크롤이 내려오면 리스트 추가\r\n        if(posBottom < winHeight){\r\n            this.setState({listEnd: this.state.listEnd + this.state.listPlus});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //컴포넌트가 마운트 됬을때\r\n    componentDidMount(){\r\n        //이벤트 리스너에 체크함수 연결\r\n        window.addEventListener(\"scroll\", this.checkScroll);\r\n        this.checkScroll();\r\n    }\r\n\r\n    //컴포넌트가 해체됬을때\r\n    componentWillUnmount(){\r\n        //이벤트 리스너에서 삭제\r\n        window.removeEventListener(\"scroll\", this.checkScroll);\r\n    }\r\n\r\n    render(){\r\n        const listComponent = [];\r\n        for(var i=1;i<=this.state.listEnd;i++){\r\n            listComponent.push(<h1 key={i}>리스트 컴포넌트{i}</h1>);\r\n        }\r\n        return <div ref={this.setRef}>{listComponent}</div>\r\n    }\r\n\r\n}\r\nexport default ScrollComponent;"]},"metadata":{},"sourceType":"module"}